<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.8.16 on darwin)" generated="20230504 15:58:04.015" rpa="false" schemaversion="3">
<suite id="s1" name="Accenture-Testing" source="/Users/allard/Desktop/accenture-testing">
<suite id="s1-s1" name="Tests" source="/Users/allard/Desktop/accenture-testing/tests">
<suite id="s1-s1-s1" name="Api" source="/Users/allard/Desktop/accenture-testing/tests/api">
<suite id="s1-s1-s1-s1" name="Api Mock Test V2" source="/Users/allard/Desktop/accenture-testing/tests/api/api_mock_test_v2.robot">
<kw name="Create Sessions" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>server</arg>
<arg>${MOCK_URL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230504 15:58:04.102" level="INFO">Creating Session using : alias=server, url=https://jsonplaceholder.typicode.com, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230504 15:58:04.102" endtime="20230504 15:58:04.103"/>
</kw>
<kw name="Create Mock Session" library="MockServerLibrary">
<arg>${MOCK_URL}</arg>
<doc>Creates an HTTP session towards mockserver.</doc>
<status status="PASS" starttime="20230504 15:58:04.103" endtime="20230504 15:58:04.103"/>
</kw>
<status status="PASS" starttime="20230504 15:58:04.102" endtime="20230504 15:58:04.103"/>
</kw>
<test id="s1-s1-s1-s1-t1" name="Success On Expected GET" line="16">
<kw name="Create Mock Request Matcher" library="MockServerLibrary">
<var>&amp;{req}</var>
<arg>GET</arg>
<arg>${ENDPOINT}</arg>
<doc>Creates a mock request matcher to be used by mockserver.</doc>
<msg timestamp="20230504 15:58:04.103" level="INFO">&amp;{req} = { method=GET | path=/todos/1 }</msg>
<status status="PASS" starttime="20230504 15:58:04.103" endtime="20230504 15:58:04.103"/>
</kw>
<kw name="Create Mock Response" library="MockServerLibrary">
<var>&amp;{rsp}</var>
<arg>status_code=200</arg>
<doc>Creates a mock response to be used by mockserver.</doc>
<msg timestamp="20230504 15:58:04.103" level="INFO">&amp;{rsp} = { statusCode=200 }</msg>
<status status="PASS" starttime="20230504 15:58:04.103" endtime="20230504 15:58:04.103"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Request is ${req}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230504 15:58:04.103" endtime="20230504 15:58:04.103"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Response is ${rsp}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230504 15:58:04.103" endtime="20230504 15:58:04.103"/>
</kw>
<kw name="Create Mock Expectation" library="MockServerLibrary">
<arg>${req}</arg>
<arg>${rsp}</arg>
<doc>Creates a mock expectation to be used by mockserver.</doc>
<msg timestamp="20230504 15:58:04.821" level="FAIL">Mock server failed with 404: {}</msg>
<status status="FAIL" starttime="20230504 15:58:04.103" endtime="20230504 15:58:04.823"/>
</kw>
<kw name="Send GET Expect Success">
<arg>${ENDPOINT}</arg>
<status status="NOT RUN" starttime="20230504 15:58:04.823" endtime="20230504 15:58:04.824"/>
</kw>
<kw name="Reset Mock Server" type="TEARDOWN">
<kw name="Dump To Log" library="MockServerLibrary">
<doc>Dumps logs at the mockserver.</doc>
<status status="PASS" starttime="20230504 15:58:04.825" endtime="20230504 15:58:04.825"/>
</kw>
<kw name="Reset All Requests" library="MockServerLibrary">
<doc>Clears all expectations and received requests from the mockserver.</doc>
<msg timestamp="20230504 15:58:05.437" level="FAIL">Mock server failed with 404: {}</msg>
<status status="FAIL" starttime="20230504 15:58:04.825" endtime="20230504 15:58:05.438"/>
</kw>
<status status="FAIL" starttime="20230504 15:58:04.824" endtime="20230504 15:58:05.438">Mock server failed with 404: {}</status>
</kw>
<status status="FAIL" starttime="20230504 15:58:04.103" endtime="20230504 15:58:05.439">Mock server failed with 404: {}

Also teardown failed:
Mock server failed with 404: {}</status>
</test>
<status status="FAIL" starttime="20230504 15:58:04.024" endtime="20230504 15:58:05.440"/>
</suite>
<status status="FAIL" starttime="20230504 15:58:04.024" endtime="20230504 15:58:05.441"/>
</suite>
<status status="FAIL" starttime="20230504 15:58:04.023" endtime="20230504 15:58:05.442"/>
</suite>
<status status="FAIL" starttime="20230504 15:58:04.016" endtime="20230504 15:58:05.444"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="0" fail="1" skip="0" id="s1" name="Accenture-Testing">Accenture-Testing</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1" name="Tests">Accenture-Testing.Tests</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s1" name="Api">Accenture-Testing.Tests.Api</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s1-s1" name="Api Mock Test V2">Accenture-Testing.Tests.Api.Api Mock Test V2</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
